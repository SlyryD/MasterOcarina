#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OcaBase
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Ocarinabot")]
	public partial class OcarinaDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertScene(Scene instance);
    partial void UpdateScene(Scene instance);
    partial void DeleteScene(Scene instance);
    partial void InsertRoom(Room instance);
    partial void UpdateRoom(Room instance);
    partial void DeleteRoom(Room instance);
    partial void InsertEntrance(Entrance instance);
    partial void UpdateEntrance(Entrance instance);
    partial void DeleteEntrance(Entrance instance);
    partial void InsertFaq(Faq instance);
    partial void UpdateFaq(Faq instance);
    partial void DeleteFaq(Faq instance);
    partial void InsertObjectFile(ObjectFile instance);
    partial void UpdateObjectFile(ObjectFile instance);
    partial void DeleteObjectFile(ObjectFile instance);
    partial void InsertActor(Actor instance);
    partial void UpdateActor(Actor instance);
    partial void DeleteActor(Actor instance);
    partial void InsertEntranceDef(EntranceDef instance);
    partial void UpdateEntranceDef(EntranceDef instance);
    partial void DeleteEntranceDef(EntranceDef instance);
    partial void InsertItem(Item instance);
    partial void UpdateItem(Item instance);
    partial void DeleteItem(Item instance);
    partial void InsertRba(Rba instance);
    partial void UpdateRba(Rba instance);
    partial void DeleteRba(Rba instance);
    partial void InsertRbaBit(RbaBit instance);
    partial void UpdateRbaBit(RbaBit instance);
    partial void DeleteRbaBit(RbaBit instance);
    partial void InsertTrick(Trick instance);
    partial void UpdateTrick(Trick instance);
    partial void DeleteTrick(Trick instance);
    partial void InsertTrickTag(TrickTag instance);
    partial void UpdateTrickTag(TrickTag instance);
    partial void DeleteTrickTag(TrickTag instance);
    partial void InsertTag(Tag instance);
    partial void UpdateTag(Tag instance);
    partial void DeleteTag(Tag instance);
    partial void InsertActorTagDescription(ActorTagDescription instance);
    partial void UpdateActorTagDescription(ActorTagDescription instance);
    partial void DeleteActorTagDescription(ActorTagDescription instance);
    partial void InsertActorTag(ActorTag instance);
    partial void UpdateActorTag(ActorTag instance);
    partial void DeleteActorTag(ActorTag instance);
    partial void InsertActorTagRelationship(ActorTagRelationship instance);
    partial void UpdateActorTagRelationship(ActorTagRelationship instance);
    partial void DeleteActorTagRelationship(ActorTagRelationship instance);
    partial void InsertEntranceIndex(EntranceIndex instance);
    partial void UpdateEntranceIndex(EntranceIndex instance);
    partial void DeleteEntranceIndex(EntranceIndex instance);
    partial void InsertSceneSearch(SceneSearch instance);
    partial void UpdateSceneSearch(SceneSearch instance);
    partial void DeleteSceneSearch(SceneSearch instance);
    partial void InsertItemSearch(ItemSearch instance);
    partial void UpdateItemSearch(ItemSearch instance);
    partial void DeleteItemSearch(ItemSearch instance);
    partial void InsertAddress(Address instance);
    partial void UpdateAddress(Address instance);
    partial void DeleteAddress(Address instance);
    partial void InsertFile(File instance);
    partial void UpdateFile(File instance);
    partial void DeleteFile(File instance);
    partial void InsertSceneCutscene(SceneCutscene instance);
    partial void UpdateSceneCutscene(SceneCutscene instance);
    partial void DeleteSceneCutscene(SceneCutscene instance);
    #endregion
		
		public OcarinaDataContext() : 
				base(global::OcaBase.Properties.Settings.Default.OcarinabotConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public OcarinaDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OcarinaDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OcarinaDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OcarinaDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Scene> Scenes
		{
			get
			{
				return this.GetTable<Scene>();
			}
		}
		
		public System.Data.Linq.Table<Room> Rooms
		{
			get
			{
				return this.GetTable<Room>();
			}
		}
		
		public System.Data.Linq.Table<Entrance> Entrances
		{
			get
			{
				return this.GetTable<Entrance>();
			}
		}
		
		public System.Data.Linq.Table<Faq> Faqs
		{
			get
			{
				return this.GetTable<Faq>();
			}
		}
		
		public System.Data.Linq.Table<ObjectFile> ObjectFiles
		{
			get
			{
				return this.GetTable<ObjectFile>();
			}
		}
		
		public System.Data.Linq.Table<Actor> Actors
		{
			get
			{
				return this.GetTable<Actor>();
			}
		}
		
		public System.Data.Linq.Table<EntranceDef> EntranceDefs
		{
			get
			{
				return this.GetTable<EntranceDef>();
			}
		}
		
		public System.Data.Linq.Table<Item> Items
		{
			get
			{
				return this.GetTable<Item>();
			}
		}
		
		public System.Data.Linq.Table<Rba> Rbas
		{
			get
			{
				return this.GetTable<Rba>();
			}
		}
		
		public System.Data.Linq.Table<RbaBit> RbaBits
		{
			get
			{
				return this.GetTable<RbaBit>();
			}
		}
		
		public System.Data.Linq.Table<RbaBits2> RbaBits2s
		{
			get
			{
				return this.GetTable<RbaBits2>();
			}
		}
		
		public System.Data.Linq.Table<Trick> Tricks
		{
			get
			{
				return this.GetTable<Trick>();
			}
		}
		
		public System.Data.Linq.Table<TrickTag> TrickTags
		{
			get
			{
				return this.GetTable<TrickTag>();
			}
		}
		
		public System.Data.Linq.Table<Tag> Tags
		{
			get
			{
				return this.GetTable<Tag>();
			}
		}
		
		public System.Data.Linq.Table<ActorTagDescription> ActorTagDescriptions
		{
			get
			{
				return this.GetTable<ActorTagDescription>();
			}
		}
		
		public System.Data.Linq.Table<ActorTag> ActorTags
		{
			get
			{
				return this.GetTable<ActorTag>();
			}
		}
		
		public System.Data.Linq.Table<ActorTagRelationship> ActorTagRelationships
		{
			get
			{
				return this.GetTable<ActorTagRelationship>();
			}
		}
		
		public System.Data.Linq.Table<Exit> Exits
		{
			get
			{
				return this.GetTable<Exit>();
			}
		}
		
		public System.Data.Linq.Table<EntranceIndex> EntranceIndexes
		{
			get
			{
				return this.GetTable<EntranceIndex>();
			}
		}
		
		public System.Data.Linq.Table<SceneSearch> SceneSearches
		{
			get
			{
				return this.GetTable<SceneSearch>();
			}
		}
		
		public System.Data.Linq.Table<ItemSearch> ItemSearches
		{
			get
			{
				return this.GetTable<ItemSearch>();
			}
		}
		
		public System.Data.Linq.Table<Address> Addresses
		{
			get
			{
				return this.GetTable<Address>();
			}
		}
		
		public System.Data.Linq.Table<File> Files
		{
			get
			{
				return this.GetTable<File>();
			}
		}
		
		public System.Data.Linq.Table<SceneCutscene> SceneCutscenes
		{
			get
			{
				return this.GetTable<SceneCutscene>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Scenes")]
	public partial class Scene : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _ID;
		
		private string _Scene;
		
		private bool _x18;
		
		private byte _Maps;
		
		private byte _Ent;
		
		private byte _Ex;
		
		private System.Nullable<int> _MapSelect;
		
		private int _FileId_DBG;
		
		private EntitySet<Room> _OcarinaMaps;
		
		private EntitySet<Entrance> _Entrances;
		
		private EntityRef<EntranceDef> _EntranceDefs;
		
		private EntitySet<EntranceDef> _EntranceDefs1;
		
		private EntitySet<EntranceIndex> _EntranceIndexes;
		
		private EntitySet<SceneSearch> _SceneSearches;
		
		private EntityRef<File> _File;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(byte value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void Onx18Changing(bool value);
    partial void Onx18Changed();
    partial void OnRoomsChanging(byte value);
    partial void OnRoomsChanged();
    partial void OnEntranceNumChanging(byte value);
    partial void OnEntranceNumChanged();
    partial void OnExitsChanging(byte value);
    partial void OnExitsChanged();
    partial void OnMapSelectChanging(System.Nullable<int> value);
    partial void OnMapSelectChanged();
    partial void OnFileIdChanging(int value);
    partial void OnFileIdChanged();
    #endregion
		
		public Scene()
		{
			this._OcarinaMaps = new EntitySet<Room>(new Action<Room>(this.attach_OcarinaMaps), new Action<Room>(this.detach_OcarinaMaps));
			this._Entrances = new EntitySet<Entrance>(new Action<Entrance>(this.attach_Entrances), new Action<Entrance>(this.detach_Entrances));
			this._EntranceDefs = default(EntityRef<EntranceDef>);
			this._EntranceDefs1 = new EntitySet<EntranceDef>(new Action<EntranceDef>(this.attach_EntranceDefs1), new Action<EntranceDef>(this.detach_EntranceDefs1));
			this._EntranceIndexes = new EntitySet<EntranceIndex>(new Action<EntranceIndex>(this.attach_EntranceIndexes), new Action<EntranceIndex>(this.detach_EntranceIndexes));
			this._SceneSearches = new EntitySet<SceneSearch>(new Action<SceneSearch>(this.attach_SceneSearches), new Action<SceneSearch>(this.detach_SceneSearches));
			this._File = default(EntityRef<File>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Scene", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Scene;
			}
			set
			{
				if ((this._Scene != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Scene = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_x18", DbType="Bit NOT NULL")]
		public bool x18
		{
			get
			{
				return this._x18;
			}
			set
			{
				if ((this._x18 != value))
				{
					this.Onx18Changing(value);
					this.SendPropertyChanging();
					this._x18 = value;
					this.SendPropertyChanged("x18");
					this.Onx18Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Maps", DbType="TinyInt NOT NULL")]
		public byte Rooms
		{
			get
			{
				return this._Maps;
			}
			set
			{
				if ((this._Maps != value))
				{
					this.OnRoomsChanging(value);
					this.SendPropertyChanging();
					this._Maps = value;
					this.SendPropertyChanged("Rooms");
					this.OnRoomsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Entrances", Storage="_Ent", DbType="TinyInt NOT NULL")]
		public byte EntranceNum
		{
			get
			{
				return this._Ent;
			}
			set
			{
				if ((this._Ent != value))
				{
					this.OnEntranceNumChanging(value);
					this.SendPropertyChanging();
					this._Ent = value;
					this.SendPropertyChanged("EntranceNum");
					this.OnEntranceNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ex", DbType="TinyInt NOT NULL")]
		public byte Exits
		{
			get
			{
				return this._Ex;
			}
			set
			{
				if ((this._Ex != value))
				{
					this.OnExitsChanging(value);
					this.SendPropertyChanging();
					this._Ex = value;
					this.SendPropertyChanged("Exits");
					this.OnExitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapSelect", DbType="Int")]
		public System.Nullable<int> MapSelect
		{
			get
			{
				return this._MapSelect;
			}
			set
			{
				if ((this._MapSelect != value))
				{
					this.OnMapSelectChanging(value);
					this.SendPropertyChanging();
					this._MapSelect = value;
					this.SendPropertyChanged("MapSelect");
					this.OnMapSelectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileId_DBG", DbType="Int")]
		public int FileId
		{
			get
			{
				return this._FileId_DBG;
			}
			set
			{
				if ((this._FileId_DBG != value))
				{
					if (this._File.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFileIdChanging(value);
					this.SendPropertyChanging();
					this._FileId_DBG = value;
					this.SendPropertyChanged("FileId");
					this.OnFileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Scene_Room", Storage="_OcarinaMaps", ThisKey="ID", OtherKey="SceneId")]
		public EntitySet<Room> Rooms1
		{
			get
			{
				return this._OcarinaMaps;
			}
			set
			{
				this._OcarinaMaps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Scene_Entrance", Storage="_Entrances", ThisKey="ID", OtherKey="SceneId")]
		public EntitySet<Entrance> Entrances
		{
			get
			{
				return this._Entrances;
			}
			set
			{
				this._Entrances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Scene_EntranceDef", Storage="_EntranceDefs", ThisKey="ID", OtherKey="SceneId", IsUnique=true, IsForeignKey=false)]
		public EntranceDef EntranceDefs
		{
			get
			{
				return this._EntranceDefs.Entity;
			}
			set
			{
				EntranceDef previousValue = this._EntranceDefs.Entity;
				if (((previousValue != value) 
							|| (this._EntranceDefs.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntranceDefs.Entity = null;
						previousValue.Scene = null;
					}
					this._EntranceDefs.Entity = value;
					if ((value != null))
					{
						value.Scene = this;
					}
					this.SendPropertyChanged("EntranceDefs");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Scene_EntranceDef1", Storage="_EntranceDefs1", ThisKey="ID", OtherKey="PrevId")]
		public EntitySet<EntranceDef> EntranceDefs1
		{
			get
			{
				return this._EntranceDefs1;
			}
			set
			{
				this._EntranceDefs1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Scene_EntranceIndex", Storage="_EntranceIndexes", ThisKey="ID", OtherKey="SceneId")]
		public EntitySet<EntranceIndex> EntranceIndexes
		{
			get
			{
				return this._EntranceIndexes;
			}
			set
			{
				this._EntranceIndexes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Scene_SceneSearch", Storage="_SceneSearches", ThisKey="ID", OtherKey="SceneId")]
		public EntitySet<SceneSearch> SceneSearches
		{
			get
			{
				return this._SceneSearches;
			}
			set
			{
				this._SceneSearches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="File_Scene", Storage="_File", ThisKey="FileId", OtherKey="FileId", IsForeignKey=true)]
		public File File
		{
			get
			{
				return this._File.Entity;
			}
			set
			{
				File previousValue = this._File.Entity;
				if (((previousValue != value) 
							|| (this._File.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._File.Entity = null;
						previousValue.Scenes.Remove(this);
					}
					this._File.Entity = value;
					if ((value != null))
					{
						value.Scenes.Add(this);
						this._FileId_DBG = value.FileId;
					}
					else
					{
						this._FileId_DBG = default(int);
					}
					this.SendPropertyChanged("File");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OcarinaMaps(Room entity)
		{
			this.SendPropertyChanging();
			entity.Scene = this;
		}
		
		private void detach_OcarinaMaps(Room entity)
		{
			this.SendPropertyChanging();
			entity.Scene = null;
		}
		
		private void attach_Entrances(Entrance entity)
		{
			this.SendPropertyChanging();
			entity.Scene = this;
		}
		
		private void detach_Entrances(Entrance entity)
		{
			this.SendPropertyChanging();
			entity.Scene = null;
		}
		
		private void attach_EntranceDefs1(EntranceDef entity)
		{
			this.SendPropertyChanging();
			entity.Scene1 = this;
		}
		
		private void detach_EntranceDefs1(EntranceDef entity)
		{
			this.SendPropertyChanging();
			entity.Scene1 = null;
		}
		
		private void attach_EntranceIndexes(EntranceIndex entity)
		{
			this.SendPropertyChanging();
			entity.Scene = this;
		}
		
		private void detach_EntranceIndexes(EntranceIndex entity)
		{
			this.SendPropertyChanging();
			entity.Scene = null;
		}
		
		private void attach_SceneSearches(SceneSearch entity)
		{
			this.SendPropertyChanging();
			entity.Scene = this;
		}
		
		private void detach_SceneSearches(SceneSearch entity)
		{
			this.SendPropertyChanging();
			entity.Scene = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rooms")]
	public partial class Room : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _Scene;
		
		private short _Map;
		
		private string _Description;
		
		private EntityRef<Scene> _OcarinaScene;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSceneIdChanging(byte value);
    partial void OnSceneIdChanged();
    partial void OnRoomIdChanging(short value);
    partial void OnRoomIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Room()
		{
			this._OcarinaScene = default(EntityRef<Scene>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Scene", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte SceneId
		{
			get
			{
				return this._Scene;
			}
			set
			{
				if ((this._Scene != value))
				{
					if (this._OcarinaScene.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSceneIdChanging(value);
					this.SendPropertyChanging();
					this._Scene = value;
					this.SendPropertyChanged("SceneId");
					this.OnSceneIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Map", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short RoomId
		{
			get
			{
				return this._Map;
			}
			set
			{
				if ((this._Map != value))
				{
					this.OnRoomIdChanging(value);
					this.SendPropertyChanging();
					this._Map = value;
					this.SendPropertyChanged("RoomId");
					this.OnRoomIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Scene_Room", Storage="_OcarinaScene", ThisKey="SceneId", OtherKey="ID", IsForeignKey=true)]
		public Scene Scene
		{
			get
			{
				return this._OcarinaScene.Entity;
			}
			set
			{
				Scene previousValue = this._OcarinaScene.Entity;
				if (((previousValue != value) 
							|| (this._OcarinaScene.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OcarinaScene.Entity = null;
						previousValue.Rooms1.Remove(this);
					}
					this._OcarinaScene.Entity = value;
					if ((value != null))
					{
						value.Rooms1.Add(this);
						this._Scene = value.ID;
					}
					else
					{
						this._Scene = default(byte);
					}
					this.SendPropertyChanged("Scene");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Entrances")]
	public partial class Entrance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _SceneId;
		
		private byte _Setup;
		
		private byte _EntranceNum;
		
		private byte _Map;
		
		private int _PosId;
		
		private int _x;
		
		private int _y;
		
		private int _z;
		
		private EntityRef<Scene> _OcarinaScene;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSceneIdChanging(byte value);
    partial void OnSceneIdChanged();
    partial void OnSetupChanging(byte value);
    partial void OnSetupChanged();
    partial void OnEntranceNumChanging(byte value);
    partial void OnEntranceNumChanged();
    partial void OnRoomChanging(byte value);
    partial void OnRoomChanged();
    partial void OnPosIdChanging(int value);
    partial void OnPosIdChanged();
    partial void OnxChanging(int value);
    partial void OnxChanged();
    partial void OnyChanging(int value);
    partial void OnyChanged();
    partial void OnzChanging(int value);
    partial void OnzChanged();
    #endregion
		
		public Entrance()
		{
			this._OcarinaScene = default(EntityRef<Scene>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SceneId", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte SceneId
		{
			get
			{
				return this._SceneId;
			}
			set
			{
				if ((this._SceneId != value))
				{
					if (this._OcarinaScene.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSceneIdChanging(value);
					this.SendPropertyChanging();
					this._SceneId = value;
					this.SendPropertyChanged("SceneId");
					this.OnSceneIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Setup", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte Setup
		{
			get
			{
				return this._Setup;
			}
			set
			{
				if ((this._Setup != value))
				{
					this.OnSetupChanging(value);
					this.SendPropertyChanging();
					this._Setup = value;
					this.SendPropertyChanged("Setup");
					this.OnSetupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntranceNum", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte EntranceNum
		{
			get
			{
				return this._EntranceNum;
			}
			set
			{
				if ((this._EntranceNum != value))
				{
					this.OnEntranceNumChanging(value);
					this.SendPropertyChanging();
					this._EntranceNum = value;
					this.SendPropertyChanged("EntranceNum");
					this.OnEntranceNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Map", DbType="TinyInt NOT NULL")]
		public byte Room
		{
			get
			{
				return this._Map;
			}
			set
			{
				if ((this._Map != value))
				{
					this.OnRoomChanging(value);
					this.SendPropertyChanging();
					this._Map = value;
					this.SendPropertyChanged("Room");
					this.OnRoomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PosId", DbType="Int NOT NULL")]
		public int PosId
		{
			get
			{
				return this._PosId;
			}
			set
			{
				if ((this._PosId != value))
				{
					this.OnPosIdChanging(value);
					this.SendPropertyChanging();
					this._PosId = value;
					this.SendPropertyChanged("PosId");
					this.OnPosIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_x", DbType="Int NOT NULL")]
		public int x
		{
			get
			{
				return this._x;
			}
			set
			{
				if ((this._x != value))
				{
					this.OnxChanging(value);
					this.SendPropertyChanging();
					this._x = value;
					this.SendPropertyChanged("x");
					this.OnxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_y", DbType="Int NOT NULL")]
		public int y
		{
			get
			{
				return this._y;
			}
			set
			{
				if ((this._y != value))
				{
					this.OnyChanging(value);
					this.SendPropertyChanging();
					this._y = value;
					this.SendPropertyChanged("y");
					this.OnyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_z", DbType="Int NOT NULL")]
		public int z
		{
			get
			{
				return this._z;
			}
			set
			{
				if ((this._z != value))
				{
					this.OnzChanging(value);
					this.SendPropertyChanging();
					this._z = value;
					this.SendPropertyChanged("z");
					this.OnzChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Scene_Entrance", Storage="_OcarinaScene", ThisKey="SceneId", OtherKey="ID", IsForeignKey=true)]
		public Scene Scene
		{
			get
			{
				return this._OcarinaScene.Entity;
			}
			set
			{
				Scene previousValue = this._OcarinaScene.Entity;
				if (((previousValue != value) 
							|| (this._OcarinaScene.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OcarinaScene.Entity = null;
						previousValue.Entrances.Remove(this);
					}
					this._OcarinaScene.Entity = value;
					if ((value != null))
					{
						value.Entrances.Add(this);
						this._SceneId = value.ID;
					}
					else
					{
						this._SceneId = default(byte);
					}
					this.SendPropertyChanged("Scene");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FAQ")]
	public partial class Faq : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _FaqId;
		
		private string _Display;
		
		private string _Link;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFaqIdChanging(string value);
    partial void OnFaqIdChanged();
    partial void OnDisplayChanging(string value);
    partial void OnDisplayChanged();
    partial void OnLinkChanging(string value);
    partial void OnLinkChanged();
    #endregion
		
		public Faq()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FaqId", DbType="NVarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string FaqId
		{
			get
			{
				return this._FaqId;
			}
			set
			{
				if ((this._FaqId != value))
				{
					this.OnFaqIdChanging(value);
					this.SendPropertyChanging();
					this._FaqId = value;
					this.SendPropertyChanged("FaqId");
					this.OnFaqIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Display", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Display
		{
			get
			{
				return this._Display;
			}
			set
			{
				if ((this._Display != value))
				{
					this.OnDisplayChanging(value);
					this.SendPropertyChanging();
					this._Display = value;
					this.SendPropertyChanged("Display");
					this.OnDisplayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Link", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Link
		{
			get
			{
				return this._Link;
			}
			set
			{
				if ((this._Link != value))
				{
					this.OnLinkChanging(value);
					this.SendPropertyChanging();
					this._Link = value;
					this.SendPropertyChanged("Link");
					this.OnLinkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ObjectFiles")]
	public partial class ObjectFile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Filename;
		
		private int _FileId_DBG;
		
		private EntitySet<Actor> _Actors;
		
		private EntityRef<File> _File;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFilenameChanging(string value);
    partial void OnFilenameChanged();
    partial void OnFileIdChanging(int value);
    partial void OnFileIdChanged();
    #endregion
		
		public ObjectFile()
		{
			this._Actors = new EntitySet<Actor>(new Action<Actor>(this.attach_Actors), new Action<Actor>(this.detach_Actors));
			this._File = default(EntityRef<File>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Filename", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Filename
		{
			get
			{
				return this._Filename;
			}
			set
			{
				if ((this._Filename != value))
				{
					this.OnFilenameChanging(value);
					this.SendPropertyChanging();
					this._Filename = value;
					this.SendPropertyChanged("Filename");
					this.OnFilenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileId_DBG", DbType="Int NOT NULL")]
		public int FileId
		{
			get
			{
				return this._FileId_DBG;
			}
			set
			{
				if ((this._FileId_DBG != value))
				{
					if (this._File.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFileIdChanging(value);
					this.SendPropertyChanging();
					this._FileId_DBG = value;
					this.SendPropertyChanged("FileId");
					this.OnFileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ObjectFile_Actor", Storage="_Actors", ThisKey="ID", OtherKey="Object")]
		public EntitySet<Actor> Actors
		{
			get
			{
				return this._Actors;
			}
			set
			{
				this._Actors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="File_ObjectFile", Storage="_File", ThisKey="FileId", OtherKey="FileId", IsForeignKey=true)]
		public File File
		{
			get
			{
				return this._File.Entity;
			}
			set
			{
				File previousValue = this._File.Entity;
				if (((previousValue != value) 
							|| (this._File.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._File.Entity = null;
						previousValue.ObjectFiles.Remove(this);
					}
					this._File.Entity = value;
					if ((value != null))
					{
						value.ObjectFiles.Add(this);
						this._FileId_DBG = value.FileId;
					}
					else
					{
						this._FileId_DBG = default(int);
					}
					this.SendPropertyChanged("File");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Actors(Actor entity)
		{
			this.SendPropertyChanging();
			entity.ObjectFile = this;
		}
		
		private void detach_Actors(Actor entity)
		{
			this.SendPropertyChanging();
			entity.ObjectFile = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Actors")]
	public partial class Actor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _FileID_DBG;
		
		private int _Object;
		
		private string _Filename;
		
		private string _Desc;
		
		private EntitySet<ActorTag> _ActorTags;
		
		private EntityRef<ObjectFile> _ObjectFile;
		
		private EntityRef<File> _File;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFileIdChanging(int value);
    partial void OnFileIdChanged();
    partial void OnObjectChanging(int value);
    partial void OnObjectChanged();
    partial void OnFilenameChanging(string value);
    partial void OnFilenameChanged();
    partial void OnDescChanging(string value);
    partial void OnDescChanged();
    #endregion
		
		public Actor()
		{
			this._ActorTags = new EntitySet<ActorTag>(new Action<ActorTag>(this.attach_ActorTags), new Action<ActorTag>(this.detach_ActorTags));
			this._ObjectFile = default(EntityRef<ObjectFile>);
			this._File = default(EntityRef<File>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileID_DBG", DbType="Int NOT NULL")]
		public int FileId
		{
			get
			{
				return this._FileID_DBG;
			}
			set
			{
				if ((this._FileID_DBG != value))
				{
					if (this._File.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFileIdChanging(value);
					this.SendPropertyChanging();
					this._FileID_DBG = value;
					this.SendPropertyChanged("FileId");
					this.OnFileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Object", DbType="Int NOT NULL")]
		public int Object
		{
			get
			{
				return this._Object;
			}
			set
			{
				if ((this._Object != value))
				{
					if (this._ObjectFile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnObjectChanging(value);
					this.SendPropertyChanging();
					this._Object = value;
					this.SendPropertyChanged("Object");
					this.OnObjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Filename", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Filename
		{
			get
			{
				return this._Filename;
			}
			set
			{
				if ((this._Filename != value))
				{
					this.OnFilenameChanging(value);
					this.SendPropertyChanging();
					this._Filename = value;
					this.SendPropertyChanged("Filename");
					this.OnFilenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Desc]", Storage="_Desc", DbType="NVarChar(255)")]
		public string Desc
		{
			get
			{
				return this._Desc;
			}
			set
			{
				if ((this._Desc != value))
				{
					this.OnDescChanging(value);
					this.SendPropertyChanging();
					this._Desc = value;
					this.SendPropertyChanged("Desc");
					this.OnDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Actor_ActorTag", Storage="_ActorTags", ThisKey="ID", OtherKey="ActorId")]
		public EntitySet<ActorTag> ActorTags
		{
			get
			{
				return this._ActorTags;
			}
			set
			{
				this._ActorTags.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ObjectFile_Actor", Storage="_ObjectFile", ThisKey="Object", OtherKey="ID", IsForeignKey=true)]
		public ObjectFile ObjectFile
		{
			get
			{
				return this._ObjectFile.Entity;
			}
			set
			{
				ObjectFile previousValue = this._ObjectFile.Entity;
				if (((previousValue != value) 
							|| (this._ObjectFile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ObjectFile.Entity = null;
						previousValue.Actors.Remove(this);
					}
					this._ObjectFile.Entity = value;
					if ((value != null))
					{
						value.Actors.Add(this);
						this._Object = value.ID;
					}
					else
					{
						this._Object = default(int);
					}
					this.SendPropertyChanged("ObjectFile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="File_Actor", Storage="_File", ThisKey="FileId", OtherKey="FileId", IsForeignKey=true)]
		public File File
		{
			get
			{
				return this._File.Entity;
			}
			set
			{
				File previousValue = this._File.Entity;
				if (((previousValue != value) 
							|| (this._File.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._File.Entity = null;
						previousValue.Actors.Remove(this);
					}
					this._File.Entity = value;
					if ((value != null))
					{
						value.Actors.Add(this);
						this._FileID_DBG = value.FileId;
					}
					else
					{
						this._FileID_DBG = default(int);
					}
					this.SendPropertyChanged("File");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ActorTags(ActorTag entity)
		{
			this.SendPropertyChanging();
			entity.Actor = this;
		}
		
		private void detach_ActorTags(ActorTag entity)
		{
			this.SendPropertyChanging();
			entity.Actor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntranceDefs")]
	public partial class EntranceDef : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _SceneId;
		
		private byte _EntranceNum;
		
		private string _DestInfo;
		
		private string _Prev;
		
		private string _PrevInfo;
		
		private System.Nullable<byte> _PrevId;
		
		private EntityRef<Scene> _Scene;
		
		private EntityRef<Scene> _Scene1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSceneIdChanging(byte value);
    partial void OnSceneIdChanged();
    partial void OnEntranceNumChanging(byte value);
    partial void OnEntranceNumChanged();
    partial void OnDestInfoChanging(string value);
    partial void OnDestInfoChanged();
    partial void OnPrevChanging(string value);
    partial void OnPrevChanged();
    partial void OnPrevInfoChanging(string value);
    partial void OnPrevInfoChanged();
    partial void OnPrevIdChanging(System.Nullable<byte> value);
    partial void OnPrevIdChanged();
    #endregion
		
		public EntranceDef()
		{
			this._Scene = default(EntityRef<Scene>);
			this._Scene1 = default(EntityRef<Scene>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SceneId", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte SceneId
		{
			get
			{
				return this._SceneId;
			}
			set
			{
				if ((this._SceneId != value))
				{
					if (this._Scene.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSceneIdChanging(value);
					this.SendPropertyChanging();
					this._SceneId = value;
					this.SendPropertyChanged("SceneId");
					this.OnSceneIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntranceNum", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte EntranceNum
		{
			get
			{
				return this._EntranceNum;
			}
			set
			{
				if ((this._EntranceNum != value))
				{
					this.OnEntranceNumChanging(value);
					this.SendPropertyChanging();
					this._EntranceNum = value;
					this.SendPropertyChanged("EntranceNum");
					this.OnEntranceNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestInfo", DbType="NVarChar(255)")]
		public string DestInfo
		{
			get
			{
				return this._DestInfo;
			}
			set
			{
				if ((this._DestInfo != value))
				{
					this.OnDestInfoChanging(value);
					this.SendPropertyChanging();
					this._DestInfo = value;
					this.SendPropertyChanged("DestInfo");
					this.OnDestInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prev", DbType="NVarChar(255)")]
		public string Prev
		{
			get
			{
				return this._Prev;
			}
			set
			{
				if ((this._Prev != value))
				{
					this.OnPrevChanging(value);
					this.SendPropertyChanging();
					this._Prev = value;
					this.SendPropertyChanged("Prev");
					this.OnPrevChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrevInfo", DbType="NVarChar(255)")]
		public string PrevInfo
		{
			get
			{
				return this._PrevInfo;
			}
			set
			{
				if ((this._PrevInfo != value))
				{
					this.OnPrevInfoChanging(value);
					this.SendPropertyChanging();
					this._PrevInfo = value;
					this.SendPropertyChanged("PrevInfo");
					this.OnPrevInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrevId", DbType="TinyInt")]
		public System.Nullable<byte> PrevId
		{
			get
			{
				return this._PrevId;
			}
			set
			{
				if ((this._PrevId != value))
				{
					if (this._Scene1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPrevIdChanging(value);
					this.SendPropertyChanging();
					this._PrevId = value;
					this.SendPropertyChanged("PrevId");
					this.OnPrevIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Scene_EntranceDef", Storage="_Scene", ThisKey="SceneId", OtherKey="ID", IsForeignKey=true)]
		public Scene Scene
		{
			get
			{
				return this._Scene.Entity;
			}
			set
			{
				Scene previousValue = this._Scene.Entity;
				if (((previousValue != value) 
							|| (this._Scene.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scene.Entity = null;
						previousValue.EntranceDefs = null;
					}
					this._Scene.Entity = value;
					if ((value != null))
					{
						value.EntranceDefs = this;
						this._SceneId = value.ID;
					}
					else
					{
						this._SceneId = default(byte);
					}
					this.SendPropertyChanged("Scene");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Scene_EntranceDef1", Storage="_Scene1", ThisKey="PrevId", OtherKey="ID", IsForeignKey=true)]
		public Scene Scene1
		{
			get
			{
				return this._Scene1.Entity;
			}
			set
			{
				Scene previousValue = this._Scene1.Entity;
				if (((previousValue != value) 
							|| (this._Scene1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scene1.Entity = null;
						previousValue.EntranceDefs1.Remove(this);
					}
					this._Scene1.Entity = value;
					if ((value != null))
					{
						value.EntranceDefs1.Add(this);
						this._PrevId = value.ID;
					}
					else
					{
						this._PrevId = default(Nullable<byte>);
					}
					this.SendPropertyChanged("Scene1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Items")]
	public partial class Item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _ID;
		
		private string _Name;
		
		private string _Description;
		
		private EntityRef<Rba> _Rbas;
		
		private EntityRef<RbaBit> _RbaBits;
		
		private EntitySet<ItemSearch> _ItemSearches;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(byte value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Item()
		{
			this._Rbas = default(EntityRef<Rba>);
			this._RbaBits = default(EntityRef<RbaBit>);
			this._ItemSearches = new EntitySet<ItemSearch>(new Action<ItemSearch>(this.attach_ItemSearches), new Action<ItemSearch>(this.detach_ItemSearches));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		private string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_Rba", Storage="_Rbas", ThisKey="ID", OtherKey="ItemId", IsUnique=true, IsForeignKey=false)]
		public Rba Rbas
		{
			get
			{
				return this._Rbas.Entity;
			}
			set
			{
				Rba previousValue = this._Rbas.Entity;
				if (((previousValue != value) 
							|| (this._Rbas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rbas.Entity = null;
						previousValue.Item = null;
					}
					this._Rbas.Entity = value;
					if ((value != null))
					{
						value.Item = this;
					}
					this.SendPropertyChanged("Rbas");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_RbaBit", Storage="_RbaBits", ThisKey="ID", OtherKey="ItemId", IsUnique=true, IsForeignKey=false)]
		public RbaBit RbaBits
		{
			get
			{
				return this._RbaBits.Entity;
			}
			set
			{
				RbaBit previousValue = this._RbaBits.Entity;
				if (((previousValue != value) 
							|| (this._RbaBits.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RbaBits.Entity = null;
						previousValue.Item = null;
					}
					this._RbaBits.Entity = value;
					if ((value != null))
					{
						value.Item = this;
					}
					this.SendPropertyChanged("RbaBits");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_ItemSearch", Storage="_ItemSearches", ThisKey="ID", OtherKey="ItemId")]
		public EntitySet<ItemSearch> ItemSearches
		{
			get
			{
				return this._ItemSearches;
			}
			set
			{
				this._ItemSearches.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ItemSearches(ItemSearch entity)
		{
			this.SendPropertyChanging();
			entity.Item = this;
		}
		
		private void detach_ItemSearches(ItemSearch entity)
		{
			this.SendPropertyChanging();
			entity.Item = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rba")]
	public partial class Rba : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _ItemId;
		
		private string _Type;
		
		private string _Effect;
		
		private EntityRef<Item> _Item;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIdChanging(byte value);
    partial void OnItemIdChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnEffectChanging(string value);
    partial void OnEffectChanged();
    #endregion
		
		public Rba()
		{
			this._Item = default(EntityRef<Item>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					if (this._Item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Effect", DbType="NVarChar(255)")]
		public string Effect
		{
			get
			{
				return this._Effect;
			}
			set
			{
				if ((this._Effect != value))
				{
					this.OnEffectChanging(value);
					this.SendPropertyChanging();
					this._Effect = value;
					this.SendPropertyChanged("Effect");
					this.OnEffectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_Rba", Storage="_Item", ThisKey="ItemId", OtherKey="ID", IsForeignKey=true)]
		public Item Item
		{
			get
			{
				return this._Item.Entity;
			}
			set
			{
				Item previousValue = this._Item.Entity;
				if (((previousValue != value) 
							|| (this._Item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Item.Entity = null;
						previousValue.Rbas = null;
					}
					this._Item.Entity = value;
					if ((value != null))
					{
						value.Rbas = this;
						this._ItemId = value.ID;
					}
					else
					{
						this._ItemId = default(byte);
					}
					this.SendPropertyChanged("Item");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RbaBits")]
	public partial class RbaBit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _ItemId;
		
		private string @__1;
		
		private string @__2;
		
		private string @__4;
		
		private string @__8;
		
		private string @__16;
		
		private string @__32;
		
		private string @__64;
		
		private string @__128;
		
		private EntityRef<Item> _Item;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIdChanging(byte value);
    partial void OnItemIdChanged();
    partial void On_1Changing(string value);
    partial void On_1Changed();
    partial void On_2Changing(string value);
    partial void On_2Changed();
    partial void On_4Changing(string value);
    partial void On_4Changed();
    partial void On_8Changing(string value);
    partial void On_8Changed();
    partial void On_16Changing(string value);
    partial void On_16Changed();
    partial void On_32Changing(string value);
    partial void On_32Changed();
    partial void On_64Changing(string value);
    partial void On_64Changed();
    partial void On_128Changing(string value);
    partial void On_128Changed();
    #endregion
		
		public RbaBit()
		{
			this._Item = default(EntityRef<Item>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					if (this._Item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[1]", Storage="__1", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string _1
		{
			get
			{
				return this.@__1;
			}
			set
			{
				if ((this.@__1 != value))
				{
					this.On_1Changing(value);
					this.SendPropertyChanging();
					this.@__1 = value;
					this.SendPropertyChanged("_1");
					this.On_1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[2]", Storage="__2", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string _2
		{
			get
			{
				return this.@__2;
			}
			set
			{
				if ((this.@__2 != value))
				{
					this.On_2Changing(value);
					this.SendPropertyChanging();
					this.@__2 = value;
					this.SendPropertyChanged("_2");
					this.On_2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[4]", Storage="__4", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string _4
		{
			get
			{
				return this.@__4;
			}
			set
			{
				if ((this.@__4 != value))
				{
					this.On_4Changing(value);
					this.SendPropertyChanging();
					this.@__4 = value;
					this.SendPropertyChanged("_4");
					this.On_4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[8]", Storage="__8", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string _8
		{
			get
			{
				return this.@__8;
			}
			set
			{
				if ((this.@__8 != value))
				{
					this.On_8Changing(value);
					this.SendPropertyChanging();
					this.@__8 = value;
					this.SendPropertyChanged("_8");
					this.On_8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[16]", Storage="__16", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string _16
		{
			get
			{
				return this.@__16;
			}
			set
			{
				if ((this.@__16 != value))
				{
					this.On_16Changing(value);
					this.SendPropertyChanging();
					this.@__16 = value;
					this.SendPropertyChanged("_16");
					this.On_16Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[32]", Storage="__32", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string _32
		{
			get
			{
				return this.@__32;
			}
			set
			{
				if ((this.@__32 != value))
				{
					this.On_32Changing(value);
					this.SendPropertyChanging();
					this.@__32 = value;
					this.SendPropertyChanged("_32");
					this.On_32Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[64]", Storage="__64", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string _64
		{
			get
			{
				return this.@__64;
			}
			set
			{
				if ((this.@__64 != value))
				{
					this.On_64Changing(value);
					this.SendPropertyChanging();
					this.@__64 = value;
					this.SendPropertyChanged("_64");
					this.On_64Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[128]", Storage="__128", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string _128
		{
			get
			{
				return this.@__128;
			}
			set
			{
				if ((this.@__128 != value))
				{
					this.On_128Changing(value);
					this.SendPropertyChanging();
					this.@__128 = value;
					this.SendPropertyChanged("_128");
					this.On_128Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_RbaBit", Storage="_Item", ThisKey="ItemId", OtherKey="ID", IsForeignKey=true)]
		public Item Item
		{
			get
			{
				return this._Item.Entity;
			}
			set
			{
				Item previousValue = this._Item.Entity;
				if (((previousValue != value) 
							|| (this._Item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Item.Entity = null;
						previousValue.RbaBits = null;
					}
					this._Item.Entity = value;
					if ((value != null))
					{
						value.RbaBits = this;
						this._ItemId = value.ID;
					}
					else
					{
						this._ItemId = default(byte);
					}
					this.SendPropertyChanged("Item");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RbaBits2")]
	public partial class RbaBits2
	{
		
		private string _Item;
		
		private string @__0;
		
		private string @__1;
		
		private string @__2;
		
		private string @__3;
		
		private string @__4;
		
		private string @__5;
		
		private string @__6;
		
		private string @__7;
		
		public RbaBits2()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Item
		{
			get
			{
				return this._Item;
			}
			set
			{
				if ((this._Item != value))
				{
					this._Item = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[0]", Storage="__0", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string _0
		{
			get
			{
				return this.@__0;
			}
			set
			{
				if ((this.@__0 != value))
				{
					this.@__0 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[1]", Storage="__1", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string _1
		{
			get
			{
				return this.@__1;
			}
			set
			{
				if ((this.@__1 != value))
				{
					this.@__1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[2]", Storage="__2", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string _2
		{
			get
			{
				return this.@__2;
			}
			set
			{
				if ((this.@__2 != value))
				{
					this.@__2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[3]", Storage="__3", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string _3
		{
			get
			{
				return this.@__3;
			}
			set
			{
				if ((this.@__3 != value))
				{
					this.@__3 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[4]", Storage="__4", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string _4
		{
			get
			{
				return this.@__4;
			}
			set
			{
				if ((this.@__4 != value))
				{
					this.@__4 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[5]", Storage="__5", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string _5
		{
			get
			{
				return this.@__5;
			}
			set
			{
				if ((this.@__5 != value))
				{
					this.@__5 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[6]", Storage="__6", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string _6
		{
			get
			{
				return this.@__6;
			}
			set
			{
				if ((this.@__6 != value))
				{
					this.@__6 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[7]", Storage="__7", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string _7
		{
			get
			{
				return this.@__7;
			}
			set
			{
				if ((this.@__7 != value))
				{
					this.@__7 = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tricks")]
	public partial class Trick : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Description;
		
		private int _Rating;
		
		private bool _Flag;
		
		private EntitySet<TrickTag> _TrickTags;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnRatingChanging(int value);
    partial void OnRatingChanged();
    partial void OnFlagChanging(bool value);
    partial void OnFlagChanged();
    #endregion
		
		public Trick()
		{
			this._TrickTags = new EntitySet<TrickTag>(new Action<TrickTag>(this.attach_TrickTags), new Action<TrickTag>(this.detach_TrickTags));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rating", DbType="Int NOT NULL")]
		public int Rating
		{
			get
			{
				return this._Rating;
			}
			set
			{
				if ((this._Rating != value))
				{
					this.OnRatingChanging(value);
					this.SendPropertyChanging();
					this._Rating = value;
					this.SendPropertyChanged("Rating");
					this.OnRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flag", DbType="Bit NOT NULL")]
		public bool Flag
		{
			get
			{
				return this._Flag;
			}
			set
			{
				if ((this._Flag != value))
				{
					this.OnFlagChanging(value);
					this.SendPropertyChanging();
					this._Flag = value;
					this.SendPropertyChanged("Flag");
					this.OnFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Trick_TrickTag", Storage="_TrickTags", ThisKey="Id", OtherKey="TrickId")]
		public EntitySet<TrickTag> TrickTags
		{
			get
			{
				return this._TrickTags;
			}
			set
			{
				this._TrickTags.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrickTags(TrickTag entity)
		{
			this.SendPropertyChanging();
			entity.Trick = this;
		}
		
		private void detach_TrickTags(TrickTag entity)
		{
			this.SendPropertyChanging();
			entity.Trick = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrickTags")]
	public partial class TrickTag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TagId;
		
		private int _TrickId;
		
		private EntityRef<Trick> _Trick;
		
		private EntityRef<Tag> _Tag;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTagIdChanging(int value);
    partial void OnTagIdChanged();
    partial void OnTrickIdChanging(int value);
    partial void OnTrickIdChanged();
    #endregion
		
		public TrickTag()
		{
			this._Trick = default(EntityRef<Trick>);
			this._Tag = default(EntityRef<Tag>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TagId
		{
			get
			{
				return this._TagId;
			}
			set
			{
				if ((this._TagId != value))
				{
					if (this._Tag.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTagIdChanging(value);
					this.SendPropertyChanging();
					this._TagId = value;
					this.SendPropertyChanged("TagId");
					this.OnTagIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrickId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TrickId
		{
			get
			{
				return this._TrickId;
			}
			set
			{
				if ((this._TrickId != value))
				{
					if (this._Trick.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrickIdChanging(value);
					this.SendPropertyChanging();
					this._TrickId = value;
					this.SendPropertyChanged("TrickId");
					this.OnTrickIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Trick_TrickTag", Storage="_Trick", ThisKey="TrickId", OtherKey="Id", IsForeignKey=true)]
		public Trick Trick
		{
			get
			{
				return this._Trick.Entity;
			}
			set
			{
				Trick previousValue = this._Trick.Entity;
				if (((previousValue != value) 
							|| (this._Trick.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Trick.Entity = null;
						previousValue.TrickTags.Remove(this);
					}
					this._Trick.Entity = value;
					if ((value != null))
					{
						value.TrickTags.Add(this);
						this._TrickId = value.Id;
					}
					else
					{
						this._TrickId = default(int);
					}
					this.SendPropertyChanged("Trick");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tag_TrickTag", Storage="_Tag", ThisKey="TagId", OtherKey="Id", IsForeignKey=true)]
		public Tag Tag
		{
			get
			{
				return this._Tag.Entity;
			}
			set
			{
				Tag previousValue = this._Tag.Entity;
				if (((previousValue != value) 
							|| (this._Tag.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tag.Entity = null;
						previousValue.TrickTags.Remove(this);
					}
					this._Tag.Entity = value;
					if ((value != null))
					{
						value.TrickTags.Add(this);
						this._TagId = value.Id;
					}
					else
					{
						this._TagId = default(int);
					}
					this.SendPropertyChanged("Tag");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tags")]
	public partial class Tag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private EntitySet<TrickTag> _TrickTags;
		
		private EntityRef<ActorTagDescription> _ActorTagDescription;
		
		private EntitySet<ActorTag> _ActorTags;
		
		private EntitySet<ActorTagRelationship> _ActorTagRelationships;
		
		private EntitySet<ActorTagRelationship> _ActorTagRelationships1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Tag()
		{
			this._TrickTags = new EntitySet<TrickTag>(new Action<TrickTag>(this.attach_TrickTags), new Action<TrickTag>(this.detach_TrickTags));
			this._ActorTagDescription = default(EntityRef<ActorTagDescription>);
			this._ActorTags = new EntitySet<ActorTag>(new Action<ActorTag>(this.attach_ActorTags), new Action<ActorTag>(this.detach_ActorTags));
			this._ActorTagRelationships = new EntitySet<ActorTagRelationship>(new Action<ActorTagRelationship>(this.attach_ActorTagRelationships), new Action<ActorTagRelationship>(this.detach_ActorTagRelationships));
			this._ActorTagRelationships1 = new EntitySet<ActorTagRelationship>(new Action<ActorTagRelationship>(this.attach_ActorTagRelationships1), new Action<ActorTagRelationship>(this.detach_ActorTagRelationships1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tag_TrickTag", Storage="_TrickTags", ThisKey="Id", OtherKey="TagId")]
		public EntitySet<TrickTag> TrickTags
		{
			get
			{
				return this._TrickTags;
			}
			set
			{
				this._TrickTags.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tag_ActorTagDescription", Storage="_ActorTagDescription", ThisKey="Id", OtherKey="TagId", IsUnique=true, IsForeignKey=false)]
		public ActorTagDescription ActorTagDescription
		{
			get
			{
				return this._ActorTagDescription.Entity;
			}
			set
			{
				ActorTagDescription previousValue = this._ActorTagDescription.Entity;
				if (((previousValue != value) 
							|| (this._ActorTagDescription.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActorTagDescription.Entity = null;
						previousValue.Tag = null;
					}
					this._ActorTagDescription.Entity = value;
					if ((value != null))
					{
						value.Tag = this;
					}
					this.SendPropertyChanged("ActorTagDescription");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tag_ActorTag", Storage="_ActorTags", ThisKey="Id", OtherKey="TagId")]
		public EntitySet<ActorTag> ActorTags
		{
			get
			{
				return this._ActorTags;
			}
			set
			{
				this._ActorTags.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tag_ActorTagRelationship", Storage="_ActorTagRelationships", ThisKey="Id", OtherKey="ChildTagId")]
		public EntitySet<ActorTagRelationship> ActorTagRelationships_Child
		{
			get
			{
				return this._ActorTagRelationships;
			}
			set
			{
				this._ActorTagRelationships.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tag_ActorTagRelationship1", Storage="_ActorTagRelationships1", ThisKey="Id", OtherKey="ParentTagId")]
		public EntitySet<ActorTagRelationship> ActorTagRelationships_Parent
		{
			get
			{
				return this._ActorTagRelationships1;
			}
			set
			{
				this._ActorTagRelationships1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrickTags(TrickTag entity)
		{
			this.SendPropertyChanging();
			entity.Tag = this;
		}
		
		private void detach_TrickTags(TrickTag entity)
		{
			this.SendPropertyChanging();
			entity.Tag = null;
		}
		
		private void attach_ActorTags(ActorTag entity)
		{
			this.SendPropertyChanging();
			entity.Tag = this;
		}
		
		private void detach_ActorTags(ActorTag entity)
		{
			this.SendPropertyChanging();
			entity.Tag = null;
		}
		
		private void attach_ActorTagRelationships(ActorTagRelationship entity)
		{
			this.SendPropertyChanging();
			entity.ChildTag = this;
		}
		
		private void detach_ActorTagRelationships(ActorTagRelationship entity)
		{
			this.SendPropertyChanging();
			entity.ChildTag = null;
		}
		
		private void attach_ActorTagRelationships1(ActorTagRelationship entity)
		{
			this.SendPropertyChanging();
			entity.ParentTag = this;
		}
		
		private void detach_ActorTagRelationships1(ActorTagRelationship entity)
		{
			this.SendPropertyChanging();
			entity.ParentTag = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActorTagDescriptions")]
	public partial class ActorTagDescription : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TagId;
		
		private string _Description;
		
		private EntityRef<Tag> _Tag;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTagIdChanging(int value);
    partial void OnTagIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public ActorTagDescription()
		{
			this._Tag = default(EntityRef<Tag>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TagId
		{
			get
			{
				return this._TagId;
			}
			set
			{
				if ((this._TagId != value))
				{
					if (this._Tag.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTagIdChanging(value);
					this.SendPropertyChanging();
					this._TagId = value;
					this.SendPropertyChanged("TagId");
					this.OnTagIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tag_ActorTagDescription", Storage="_Tag", ThisKey="TagId", OtherKey="Id", IsForeignKey=true)]
		public Tag Tag
		{
			get
			{
				return this._Tag.Entity;
			}
			set
			{
				Tag previousValue = this._Tag.Entity;
				if (((previousValue != value) 
							|| (this._Tag.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tag.Entity = null;
						previousValue.ActorTagDescription = null;
					}
					this._Tag.Entity = value;
					if ((value != null))
					{
						value.ActorTagDescription = this;
						this._TagId = value.Id;
					}
					else
					{
						this._TagId = default(int);
					}
					this.SendPropertyChanged("Tag");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActorTags")]
	public partial class ActorTag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ActorId;
		
		private int _TagId;
		
		private EntityRef<Actor> _Actor;
		
		private EntityRef<Tag> _Tag;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnActorIdChanging(int value);
    partial void OnActorIdChanged();
    partial void OnTagIdChanging(int value);
    partial void OnTagIdChanged();
    #endregion
		
		public ActorTag()
		{
			this._Actor = default(EntityRef<Actor>);
			this._Tag = default(EntityRef<Tag>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActorId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ActorId
		{
			get
			{
				return this._ActorId;
			}
			set
			{
				if ((this._ActorId != value))
				{
					if (this._Actor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnActorIdChanging(value);
					this.SendPropertyChanging();
					this._ActorId = value;
					this.SendPropertyChanged("ActorId");
					this.OnActorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TagId
		{
			get
			{
				return this._TagId;
			}
			set
			{
				if ((this._TagId != value))
				{
					if (this._Tag.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTagIdChanging(value);
					this.SendPropertyChanging();
					this._TagId = value;
					this.SendPropertyChanged("TagId");
					this.OnTagIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Actor_ActorTag", Storage="_Actor", ThisKey="ActorId", OtherKey="ID", IsForeignKey=true)]
		public Actor Actor
		{
			get
			{
				return this._Actor.Entity;
			}
			set
			{
				Actor previousValue = this._Actor.Entity;
				if (((previousValue != value) 
							|| (this._Actor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Actor.Entity = null;
						previousValue.ActorTags.Remove(this);
					}
					this._Actor.Entity = value;
					if ((value != null))
					{
						value.ActorTags.Add(this);
						this._ActorId = value.ID;
					}
					else
					{
						this._ActorId = default(int);
					}
					this.SendPropertyChanged("Actor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tag_ActorTag", Storage="_Tag", ThisKey="TagId", OtherKey="Id", IsForeignKey=true)]
		public Tag Tag
		{
			get
			{
				return this._Tag.Entity;
			}
			set
			{
				Tag previousValue = this._Tag.Entity;
				if (((previousValue != value) 
							|| (this._Tag.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tag.Entity = null;
						previousValue.ActorTags.Remove(this);
					}
					this._Tag.Entity = value;
					if ((value != null))
					{
						value.ActorTags.Add(this);
						this._TagId = value.Id;
					}
					else
					{
						this._TagId = default(int);
					}
					this.SendPropertyChanged("Tag");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActorTagRelationships")]
	public partial class ActorTagRelationship : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ParentTag;
		
		private int _ChildTag;
		
		private EntityRef<Tag> _Tag;
		
		private EntityRef<Tag> _Tag1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnParentTagIdChanging(int value);
    partial void OnParentTagIdChanged();
    partial void OnChildTagIdChanging(int value);
    partial void OnChildTagIdChanged();
    #endregion
		
		public ActorTagRelationship()
		{
			this._Tag = default(EntityRef<Tag>);
			this._Tag1 = default(EntityRef<Tag>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="TagId_Parent", Storage="_ParentTag", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ParentTagId
		{
			get
			{
				return this._ParentTag;
			}
			set
			{
				if ((this._ParentTag != value))
				{
					this.OnParentTagIdChanging(value);
					this.SendPropertyChanging();
					this._ParentTag = value;
					this.SendPropertyChanged("ParentTagId");
					this.OnParentTagIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="TagId_Child", Storage="_ChildTag", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ChildTagId
		{
			get
			{
				return this._ChildTag;
			}
			set
			{
				if ((this._ChildTag != value))
				{
					this.OnChildTagIdChanging(value);
					this.SendPropertyChanging();
					this._ChildTag = value;
					this.SendPropertyChanged("ChildTagId");
					this.OnChildTagIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tag_ActorTagRelationship", Storage="_Tag", ThisKey="ChildTagId", OtherKey="Id", IsForeignKey=true)]
		public Tag ChildTag
		{
			get
			{
				return this._Tag.Entity;
			}
			set
			{
				Tag previousValue = this._Tag.Entity;
				if (((previousValue != value) 
							|| (this._Tag.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tag.Entity = null;
						previousValue.ActorTagRelationships_Child.Remove(this);
					}
					this._Tag.Entity = value;
					if ((value != null))
					{
						value.ActorTagRelationships_Child.Add(this);
						this._ChildTag = value.Id;
					}
					else
					{
						this._ChildTag = default(int);
					}
					this.SendPropertyChanged("ChildTag");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tag_ActorTagRelationship1", Storage="_Tag1", ThisKey="ParentTagId", OtherKey="Id", IsForeignKey=true)]
		public Tag ParentTag
		{
			get
			{
				return this._Tag1.Entity;
			}
			set
			{
				Tag previousValue = this._Tag1.Entity;
				if (((previousValue != value) 
							|| (this._Tag1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tag1.Entity = null;
						previousValue.ActorTagRelationships_Parent.Remove(this);
					}
					this._Tag1.Entity = value;
					if ((value != null))
					{
						value.ActorTagRelationships_Parent.Add(this);
						this._ParentTag = value.Id;
					}
					else
					{
						this._ParentTag = default(int);
					}
					this.SendPropertyChanged("ParentTag");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Exits")]
	public partial class Exit
	{
		
		private byte _Scene;
		
		private byte _Setup;
		
		private byte _ExitNum;
		
		private short _EntranceId;
		
		public Exit()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Scene", DbType="TinyInt NOT NULL")]
		public byte Scene
		{
			get
			{
				return this._Scene;
			}
			set
			{
				if ((this._Scene != value))
				{
					this._Scene = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Setup", DbType="TinyInt NOT NULL")]
		public byte Setup
		{
			get
			{
				return this._Setup;
			}
			set
			{
				if ((this._Setup != value))
				{
					this._Setup = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExitNum", DbType="TinyInt NOT NULL")]
		public byte ExitNum
		{
			get
			{
				return this._ExitNum;
			}
			set
			{
				if ((this._ExitNum != value))
				{
					this._ExitNum = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntranceId", DbType="SmallInt NOT NULL")]
		public short EntranceId
		{
			get
			{
				return this._EntranceId;
			}
			set
			{
				if ((this._EntranceId != value))
				{
					this._EntranceId = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntranceIndexes")]
	public partial class EntranceIndex : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _ID;
		
		private byte _SceneId;
		
		private byte _EntranceNum;
		
		private byte _Variable;
		
		private byte _Kaleidoscope;
		
		private short _BaseIndex;
		
		private EntityRef<Scene> _Scene;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(short value);
    partial void OnIDChanged();
    partial void OnSceneIdChanging(byte value);
    partial void OnSceneIdChanged();
    partial void OnEntranceNumChanging(byte value);
    partial void OnEntranceNumChanged();
    partial void OnVariableChanging(byte value);
    partial void OnVariableChanged();
    partial void OnKaleidoscopeChanging(byte value);
    partial void OnKaleidoscopeChanged();
    partial void OnBaseIndexChanging(short value);
    partial void OnBaseIndexChanged();
    #endregion
		
		public EntranceIndex()
		{
			this._Scene = default(EntityRef<Scene>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SceneId", DbType="TinyInt NOT NULL")]
		public byte SceneId
		{
			get
			{
				return this._SceneId;
			}
			set
			{
				if ((this._SceneId != value))
				{
					if (this._Scene.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSceneIdChanging(value);
					this.SendPropertyChanging();
					this._SceneId = value;
					this.SendPropertyChanged("SceneId");
					this.OnSceneIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntranceNum", DbType="TinyInt NOT NULL")]
		public byte EntranceNum
		{
			get
			{
				return this._EntranceNum;
			}
			set
			{
				if ((this._EntranceNum != value))
				{
					this.OnEntranceNumChanging(value);
					this.SendPropertyChanging();
					this._EntranceNum = value;
					this.SendPropertyChanged("EntranceNum");
					this.OnEntranceNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Variable", DbType="TinyInt NOT NULL")]
		public byte Variable
		{
			get
			{
				return this._Variable;
			}
			set
			{
				if ((this._Variable != value))
				{
					this.OnVariableChanging(value);
					this.SendPropertyChanging();
					this._Variable = value;
					this.SendPropertyChanged("Variable");
					this.OnVariableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kaleidoscope", DbType="TinyInt NOT NULL")]
		public byte Kaleidoscope
		{
			get
			{
				return this._Kaleidoscope;
			}
			set
			{
				if ((this._Kaleidoscope != value))
				{
					this.OnKaleidoscopeChanging(value);
					this.SendPropertyChanging();
					this._Kaleidoscope = value;
					this.SendPropertyChanged("Kaleidoscope");
					this.OnKaleidoscopeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseIndex", DbType="SmallInt NOT NULL")]
		public short BaseIndex
		{
			get
			{
				return this._BaseIndex;
			}
			set
			{
				if ((this._BaseIndex != value))
				{
					this.OnBaseIndexChanging(value);
					this.SendPropertyChanging();
					this._BaseIndex = value;
					this.SendPropertyChanged("BaseIndex");
					this.OnBaseIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Scene_EntranceIndex", Storage="_Scene", ThisKey="SceneId", OtherKey="ID", IsForeignKey=true)]
		public Scene Scene
		{
			get
			{
				return this._Scene.Entity;
			}
			set
			{
				Scene previousValue = this._Scene.Entity;
				if (((previousValue != value) 
							|| (this._Scene.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scene.Entity = null;
						previousValue.EntranceIndexes.Remove(this);
					}
					this._Scene.Entity = value;
					if ((value != null))
					{
						value.EntranceIndexes.Add(this);
						this._SceneId = value.ID;
					}
					else
					{
						this._SceneId = default(byte);
					}
					this.SendPropertyChanged("Scene");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SceneSearch3")]
	public partial class SceneSearch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Tag;
		
		private byte _SceneId;
		
		private double _Rank;
		
		private EntityRef<Scene> _Scene;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTagChanging(string value);
    partial void OnTagChanged();
    partial void OnSceneIdChanging(byte value);
    partial void OnSceneIdChanged();
    partial void OnRankChanging(double value);
    partial void OnRankChanged();
    #endregion
		
		public SceneSearch()
		{
			this._Scene = default(EntityRef<Scene>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tag", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Tag
		{
			get
			{
				return this._Tag;
			}
			set
			{
				if ((this._Tag != value))
				{
					this.OnTagChanging(value);
					this.SendPropertyChanging();
					this._Tag = value;
					this.SendPropertyChanged("Tag");
					this.OnTagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SceneId", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte SceneId
		{
			get
			{
				return this._SceneId;
			}
			set
			{
				if ((this._SceneId != value))
				{
					if (this._Scene.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSceneIdChanging(value);
					this.SendPropertyChanging();
					this._SceneId = value;
					this.SendPropertyChanged("SceneId");
					this.OnSceneIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rank", DbType="Float NOT NULL")]
		public double Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Scene_SceneSearch", Storage="_Scene", ThisKey="SceneId", OtherKey="ID", IsForeignKey=true)]
		public Scene Scene
		{
			get
			{
				return this._Scene.Entity;
			}
			set
			{
				Scene previousValue = this._Scene.Entity;
				if (((previousValue != value) 
							|| (this._Scene.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scene.Entity = null;
						previousValue.SceneSearches.Remove(this);
					}
					this._Scene.Entity = value;
					if ((value != null))
					{
						value.SceneSearches.Add(this);
						this._SceneId = value.ID;
					}
					else
					{
						this._SceneId = default(byte);
					}
					this.SendPropertyChanged("Scene");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ItemSearch3")]
	public partial class ItemSearch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Tag;
		
		private byte _ItemId;
		
		private double _Rank;
		
		private EntityRef<Item> _Item;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTagChanging(string value);
    partial void OnTagChanged();
    partial void OnItemIdChanging(byte value);
    partial void OnItemIdChanged();
    partial void OnRankChanging(double value);
    partial void OnRankChanged();
    #endregion
		
		public ItemSearch()
		{
			this._Item = default(EntityRef<Item>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tag", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Tag
		{
			get
			{
				return this._Tag;
			}
			set
			{
				if ((this._Tag != value))
				{
					this.OnTagChanging(value);
					this.SendPropertyChanging();
					this._Tag = value;
					this.SendPropertyChanged("Tag");
					this.OnTagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					if (this._Item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rank", DbType="Float NOT NULL")]
		public double Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_ItemSearch", Storage="_Item", ThisKey="ItemId", OtherKey="ID", IsForeignKey=true)]
		public Item Item
		{
			get
			{
				return this._Item.Entity;
			}
			set
			{
				Item previousValue = this._Item.Entity;
				if (((previousValue != value) 
							|| (this._Item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Item.Entity = null;
						previousValue.ItemSearches.Remove(this);
					}
					this._Item.Entity = value;
					if ((value != null))
					{
						value.ItemSearches.Add(this);
						this._ItemId = value.ID;
					}
					else
					{
						this._ItemId = default(byte);
					}
					this.SendPropertyChanged("Item");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Addresses")]
	public partial class Address : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Index;
		
		private string _VersionCode;
		
		private int _StartAddr;
		
		private int _EndAddr;
		
		private System.Nullable<int> _StartPhysicalAddr;
		
		private System.Nullable<int> _EndPhysicalAddr;
		
		private EntityRef<File> _DBG_File;
		
		private EntityRef<File> _MQP_File;
		
		private EntityRef<File> _N0_File;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIndexChanging(int value);
    partial void OnIndexChanged();
    partial void OnVersionCodeChanging(string value);
    partial void OnVersionCodeChanged();
    partial void OnStartAddrChanging(int value);
    partial void OnStartAddrChanged();
    partial void OnEndAddrChanging(int value);
    partial void OnEndAddrChanged();
    partial void OnStartPhysicalAddrChanging(System.Nullable<int> value);
    partial void OnStartPhysicalAddrChanged();
    partial void OnEndPhysicalAddrChanging(System.Nullable<int> value);
    partial void OnEndPhysicalAddrChanged();
    #endregion
		
		public Address()
		{
			this._DBG_File = default(EntityRef<File>);
			this._MQP_File = default(EntityRef<File>);
			this._N0_File = default(EntityRef<File>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Index]", Storage="_Index", DbType="Int NOT NULL")]
		public int Index
		{
			get
			{
				return this._Index;
			}
			set
			{
				if ((this._Index != value))
				{
					this.OnIndexChanging(value);
					this.SendPropertyChanging();
					this._Index = value;
					this.SendPropertyChanged("Index");
					this.OnIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionCode", DbType="NVarChar(4)")]
		public string VersionCode
		{
			get
			{
				return this._VersionCode;
			}
			set
			{
				if ((this._VersionCode != value))
				{
					this.OnVersionCodeChanging(value);
					this.SendPropertyChanging();
					this._VersionCode = value;
					this.SendPropertyChanged("VersionCode");
					this.OnVersionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartAddr", DbType="Int NOT NULL")]
		public int StartAddr
		{
			get
			{
				return this._StartAddr;
			}
			set
			{
				if ((this._StartAddr != value))
				{
					this.OnStartAddrChanging(value);
					this.SendPropertyChanging();
					this._StartAddr = value;
					this.SendPropertyChanged("StartAddr");
					this.OnStartAddrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndAddr", DbType="Int NOT NULL")]
		public int EndAddr
		{
			get
			{
				return this._EndAddr;
			}
			set
			{
				if ((this._EndAddr != value))
				{
					this.OnEndAddrChanging(value);
					this.SendPropertyChanging();
					this._EndAddr = value;
					this.SendPropertyChanged("EndAddr");
					this.OnEndAddrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartPhysicalAddr", DbType="Int")]
		public System.Nullable<int> StartPhysicalAddr
		{
			get
			{
				return this._StartPhysicalAddr;
			}
			set
			{
				if ((this._StartPhysicalAddr != value))
				{
					this.OnStartPhysicalAddrChanging(value);
					this.SendPropertyChanging();
					this._StartPhysicalAddr = value;
					this.SendPropertyChanged("StartPhysicalAddr");
					this.OnStartPhysicalAddrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndPhysicalAddr", DbType="Int")]
		public System.Nullable<int> EndPhysicalAddr
		{
			get
			{
				return this._EndPhysicalAddr;
			}
			set
			{
				if ((this._EndPhysicalAddr != value))
				{
					this.OnEndPhysicalAddrChanging(value);
					this.SendPropertyChanging();
					this._EndPhysicalAddr = value;
					this.SendPropertyChanged("EndPhysicalAddr");
					this.OnEndPhysicalAddrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_File", Storage="_DBG_File", ThisKey="ID", OtherKey="DBG_Address", IsUnique=true, IsForeignKey=false)]
		public File DBG_File
		{
			get
			{
				return this._DBG_File.Entity;
			}
			set
			{
				File previousValue = this._DBG_File.Entity;
				if (((previousValue != value) 
							|| (this._DBG_File.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DBG_File.Entity = null;
						previousValue.Address_DBG = null;
					}
					this._DBG_File.Entity = value;
					if ((value != null))
					{
						value.Address_DBG = this;
					}
					this.SendPropertyChanged("DBG_File");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_File1", Storage="_MQP_File", ThisKey="ID", OtherKey="MQP_Address", IsUnique=true, IsForeignKey=false)]
		public File MQP_File
		{
			get
			{
				return this._MQP_File.Entity;
			}
			set
			{
				File previousValue = this._MQP_File.Entity;
				if (((previousValue != value) 
							|| (this._MQP_File.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MQP_File.Entity = null;
						previousValue.Address_MQP = null;
					}
					this._MQP_File.Entity = value;
					if ((value != null))
					{
						value.Address_MQP = this;
					}
					this.SendPropertyChanged("MQP_File");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_File2", Storage="_N0_File", ThisKey="ID", OtherKey="N0_Address", IsUnique=true, IsForeignKey=false)]
		public File N0_File
		{
			get
			{
				return this._N0_File.Entity;
			}
			set
			{
				File previousValue = this._N0_File.Entity;
				if (((previousValue != value) 
							|| (this._N0_File.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._N0_File.Entity = null;
						previousValue.Address_N0 = null;
					}
					this._N0_File.Entity = value;
					if ((value != null))
					{
						value.Address_N0 = this;
					}
					this.SendPropertyChanged("N0_File");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Files")]
	public partial class File : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FileId;
		
		private string _Filename;
		
		private string _Description;
		
		private string _Filetype;
		
		private System.Nullable<bool> _Compressed;
		
		private System.Nullable<int> _DBG_Address;
		
		private System.Nullable<int> _N0_Address;
		
		private System.Nullable<int> _MQP_Address;
		
		private EntitySet<Scene> _Scenes;
		
		private EntitySet<ObjectFile> _ObjectFiles;
		
		private EntitySet<Actor> _Actors;
		
		private EntityRef<Address> _Address_DBG;
		
		private EntityRef<Address> _Address_MQP;
		
		private EntityRef<Address> _Address_N0;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFileIdChanging(int value);
    partial void OnFileIdChanged();
    partial void OnFilenameChanging(string value);
    partial void OnFilenameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnFiletypeChanging(string value);
    partial void OnFiletypeChanged();
    partial void OnCompressedChanging(System.Nullable<bool> value);
    partial void OnCompressedChanged();
    partial void OnDBG_AddressChanging(System.Nullable<int> value);
    partial void OnDBG_AddressChanged();
    partial void OnN0_AddressChanging(System.Nullable<int> value);
    partial void OnN0_AddressChanged();
    partial void OnMQP_AddressChanging(System.Nullable<int> value);
    partial void OnMQP_AddressChanged();
    #endregion
		
		public File()
		{
			this._Scenes = new EntitySet<Scene>(new Action<Scene>(this.attach_Scenes), new Action<Scene>(this.detach_Scenes));
			this._ObjectFiles = new EntitySet<ObjectFile>(new Action<ObjectFile>(this.attach_ObjectFiles), new Action<ObjectFile>(this.detach_ObjectFiles));
			this._Actors = new EntitySet<Actor>(new Action<Actor>(this.attach_Actors), new Action<Actor>(this.detach_Actors));
			this._Address_DBG = default(EntityRef<Address>);
			this._Address_MQP = default(EntityRef<Address>);
			this._Address_N0 = default(EntityRef<Address>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int FileId
		{
			get
			{
				return this._FileId;
			}
			set
			{
				if ((this._FileId != value))
				{
					this.OnFileIdChanging(value);
					this.SendPropertyChanging();
					this._FileId = value;
					this.SendPropertyChanged("FileId");
					this.OnFileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Filename", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Filename
		{
			get
			{
				return this._Filename;
			}
			set
			{
				if ((this._Filename != value))
				{
					this.OnFilenameChanging(value);
					this.SendPropertyChanging();
					this._Filename = value;
					this.SendPropertyChanged("Filename");
					this.OnFilenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Filetype", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Filetype
		{
			get
			{
				return this._Filetype;
			}
			set
			{
				if ((this._Filetype != value))
				{
					this.OnFiletypeChanging(value);
					this.SendPropertyChanging();
					this._Filetype = value;
					this.SendPropertyChanged("Filetype");
					this.OnFiletypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Compressed", DbType="Bit")]
		public System.Nullable<bool> Compressed
		{
			get
			{
				return this._Compressed;
			}
			set
			{
				if ((this._Compressed != value))
				{
					this.OnCompressedChanging(value);
					this.SendPropertyChanging();
					this._Compressed = value;
					this.SendPropertyChanged("Compressed");
					this.OnCompressedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DBG_Address", DbType="Int")]
		public System.Nullable<int> DBG_Address
		{
			get
			{
				return this._DBG_Address;
			}
			set
			{
				if ((this._DBG_Address != value))
				{
					if (this._Address_DBG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDBG_AddressChanging(value);
					this.SendPropertyChanging();
					this._DBG_Address = value;
					this.SendPropertyChanged("DBG_Address");
					this.OnDBG_AddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_N0_Address", DbType="Int")]
		public System.Nullable<int> N0_Address
		{
			get
			{
				return this._N0_Address;
			}
			set
			{
				if ((this._N0_Address != value))
				{
					if (this._Address_N0.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnN0_AddressChanging(value);
					this.SendPropertyChanging();
					this._N0_Address = value;
					this.SendPropertyChanged("N0_Address");
					this.OnN0_AddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MQP_Address", DbType="Int")]
		public System.Nullable<int> MQP_Address
		{
			get
			{
				return this._MQP_Address;
			}
			set
			{
				if ((this._MQP_Address != value))
				{
					if (this._Address_MQP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMQP_AddressChanging(value);
					this.SendPropertyChanging();
					this._MQP_Address = value;
					this.SendPropertyChanged("MQP_Address");
					this.OnMQP_AddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="File_Scene", Storage="_Scenes", ThisKey="FileId", OtherKey="FileId")]
		public EntitySet<Scene> Scenes
		{
			get
			{
				return this._Scenes;
			}
			set
			{
				this._Scenes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="File_ObjectFile", Storage="_ObjectFiles", ThisKey="FileId", OtherKey="FileId")]
		public EntitySet<ObjectFile> ObjectFiles
		{
			get
			{
				return this._ObjectFiles;
			}
			set
			{
				this._ObjectFiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="File_Actor", Storage="_Actors", ThisKey="FileId", OtherKey="FileId")]
		public EntitySet<Actor> Actors
		{
			get
			{
				return this._Actors;
			}
			set
			{
				this._Actors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_File", Storage="_Address_DBG", ThisKey="DBG_Address", OtherKey="ID", IsForeignKey=true)]
		public Address Address_DBG
		{
			get
			{
				return this._Address_DBG.Entity;
			}
			set
			{
				Address previousValue = this._Address_DBG.Entity;
				if (((previousValue != value) 
							|| (this._Address_DBG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address_DBG.Entity = null;
						previousValue.DBG_File = null;
					}
					this._Address_DBG.Entity = value;
					if ((value != null))
					{
						value.DBG_File = this;
						this._DBG_Address = value.ID;
					}
					else
					{
						this._DBG_Address = default(Nullable<int>);
					}
					this.SendPropertyChanged("Address_DBG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_File1", Storage="_Address_MQP", ThisKey="MQP_Address", OtherKey="ID", IsForeignKey=true)]
		public Address Address_MQP
		{
			get
			{
				return this._Address_MQP.Entity;
			}
			set
			{
				Address previousValue = this._Address_MQP.Entity;
				if (((previousValue != value) 
							|| (this._Address_MQP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address_MQP.Entity = null;
						previousValue.MQP_File = null;
					}
					this._Address_MQP.Entity = value;
					if ((value != null))
					{
						value.MQP_File = this;
						this._MQP_Address = value.ID;
					}
					else
					{
						this._MQP_Address = default(Nullable<int>);
					}
					this.SendPropertyChanged("Address_MQP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_File2", Storage="_Address_N0", ThisKey="N0_Address", OtherKey="ID", IsForeignKey=true)]
		public Address Address_N0
		{
			get
			{
				return this._Address_N0.Entity;
			}
			set
			{
				Address previousValue = this._Address_N0.Entity;
				if (((previousValue != value) 
							|| (this._Address_N0.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address_N0.Entity = null;
						previousValue.N0_File = null;
					}
					this._Address_N0.Entity = value;
					if ((value != null))
					{
						value.N0_File = this;
						this._N0_Address = value.ID;
					}
					else
					{
						this._N0_Address = default(Nullable<int>);
					}
					this.SendPropertyChanged("Address_N0");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Scenes(Scene entity)
		{
			this.SendPropertyChanging();
			entity.File = this;
		}
		
		private void detach_Scenes(Scene entity)
		{
			this.SendPropertyChanging();
			entity.File = null;
		}
		
		private void attach_ObjectFiles(ObjectFile entity)
		{
			this.SendPropertyChanging();
			entity.File = this;
		}
		
		private void detach_ObjectFiles(ObjectFile entity)
		{
			this.SendPropertyChanging();
			entity.File = null;
		}
		
		private void attach_Actors(Actor entity)
		{
			this.SendPropertyChanging();
			entity.File = this;
		}
		
		private void detach_Actors(Actor entity)
		{
			this.SendPropertyChanging();
			entity.File = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SceneCutscenes")]
	public partial class SceneCutscene : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _Scene;
		
		private System.Nullable<short> _Setup;
		
		private int _Offset;
		
		private string _Pointer;
		
		private string _Description;
		
		private bool _OnEntrance;
		
		private bool _ActorTriggered;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSceneChanging(byte value);
    partial void OnSceneChanged();
    partial void OnSetupChanging(System.Nullable<short> value);
    partial void OnSetupChanged();
    partial void OnOffsetChanging(int value);
    partial void OnOffsetChanged();
    partial void OnPointerChanging(string value);
    partial void OnPointerChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnOnEntranceChanging(bool value);
    partial void OnOnEntranceChanged();
    partial void OnActorTriggeredChanging(bool value);
    partial void OnActorTriggeredChanged();
    #endregion
		
		public SceneCutscene()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Scene", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte Scene
		{
			get
			{
				return this._Scene;
			}
			set
			{
				if ((this._Scene != value))
				{
					this.OnSceneChanging(value);
					this.SendPropertyChanging();
					this._Scene = value;
					this.SendPropertyChanged("Scene");
					this.OnSceneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Setup", DbType="SmallInt")]
		public System.Nullable<short> Setup
		{
			get
			{
				return this._Setup;
			}
			set
			{
				if ((this._Setup != value))
				{
					this.OnSetupChanging(value);
					this.SendPropertyChanging();
					this._Setup = value;
					this.SendPropertyChanged("Setup");
					this.OnSetupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Offset", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Offset
		{
			get
			{
				return this._Offset;
			}
			set
			{
				if ((this._Offset != value))
				{
					this.OnOffsetChanging(value);
					this.SendPropertyChanging();
					this._Offset = value;
					this.SendPropertyChanged("Offset");
					this.OnOffsetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pointer", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Pointer
		{
			get
			{
				return this._Pointer;
			}
			set
			{
				if ((this._Pointer != value))
				{
					this.OnPointerChanging(value);
					this.SendPropertyChanging();
					this._Pointer = value;
					this.SendPropertyChanged("Pointer");
					this.OnPointerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnEntrance", DbType="Bit NOT NULL")]
		public bool OnEntrance
		{
			get
			{
				return this._OnEntrance;
			}
			set
			{
				if ((this._OnEntrance != value))
				{
					this.OnOnEntranceChanging(value);
					this.SendPropertyChanging();
					this._OnEntrance = value;
					this.SendPropertyChanged("OnEntrance");
					this.OnOnEntranceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActorTriggered", DbType="Bit NOT NULL")]
		public bool ActorTriggered
		{
			get
			{
				return this._ActorTriggered;
			}
			set
			{
				if ((this._ActorTriggered != value))
				{
					this.OnActorTriggeredChanging(value);
					this.SendPropertyChanging();
					this._ActorTriggered = value;
					this.SendPropertyChanged("ActorTriggered");
					this.OnActorTriggeredChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
